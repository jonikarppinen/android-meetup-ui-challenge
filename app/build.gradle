buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

dependencies {
    // Support Libraries
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:cardview-v7:21.0.3'
    compile 'com.android.support:gridlayout-v7:21.0.3'
    compile 'com.android.support:leanback-v17:21.0.3'
    compile 'com.android.support:mediarouter-v7:21.0.3'
    compile 'com.android.support:palette-v7:21.0.3'
    compile 'com.android.support:recyclerview-v7:21.0.3'
    compile 'com.android.support:support-annotations:21.0.3'
    compile 'com.android.support:support-v13:21.0.3'
    compile 'com.android.support:support-v4:21.0.3'

    compile 'com.jakewharton:butterknife:6.1.0'

    // Note: these libraries require the "Google Repository" and "Android Repository"
    //       to be installed via the SDK manager.
}

android {
    compileSdkVersion 21
    buildToolsVersion "20.0.0"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {

    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
          //  signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'LICENSE.txt'
    }
}

task checkstyle(type: Checkstyle) {
    description 'Checks if the code is somewhat acceptable'
    configFile file('./checkstyle.xml')
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files() // empty because unnecessary for checkstyle
}

// Get location of adb
Properties localProperties = new Properties()
try {
    localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
}
catch (ex) {
    throw new InvalidUserDataException("You should define the path to your Android SDK as a " +
        "property `sdk.dir` in local.properties on the project root."
    )
}
def adb = localProperties.getProperty('sdk.dir') + '/platform-tools/adb'

task runDebug(dependsOn: 'installDebug') {
    description 'Runs the debug-flavour of the app on the connected device'
    doLast {
        exec{commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"}
    }
}

task runRelease(dependsOn: 'installRelease') {
    description 'Runs the release-flavour of the app on the connected device'
    doLast {
        exec{commandLine "$adb", "shell", "am", "start", "-n", "com.futurice.project/.MainActivity"}
    }
}
